const xInc = [0, 1, -1, 0]
const yInc = [-1, 0, 0, 1]
const north = 0
const east = 1
const west = 2
const south = 3

const leftTurns  = [ west, north, south, east ]
const rightTurns = [ east, south, north, west ]
const isBlack = []

func getArr(x, y) {
    if x >= isBlack.len() {
        while isBlack.len() < x + 1 {
            isBlack.add([])
        }
    }
    const xs = isBlack[x]
    if y >= xs.len() {
        while xs.len() < y + 1 {
            xs.add(false)
        }
    }
    xs
}

func getIsBlack(x, y) {
    getArr(x, y)[y]
}

func setIsBlack(x, y, flag) {
    const arr = getArr(x, y)
    arr[y] = flag
}

func move(ant) {
    ant["position"]["x"] += xInc[ant["direction"]];
    ant["position"]["y"] += yInc[ant["direction"]];
}

func step(ant) {
    var ptCur = (x: ant["x"] + ant["x"], y: ant["y"] + ant["origin"]["y"])
    var leftTurn = getIsBlack(ptCur["x"], ptCur["y"])
    ant["direction"] =
        if leftTurn  {
            leftTurns[ant["direction"]] 
        } else {
            rightTurns[ant["direction"]]
        }
    setIsBlack(ptCur["x"], ptCur["y"], !getIsBlack(ptCur["x"], ptCur["y"]))
    move(ant)
    ptCur = (x: ant["position"]["x"] + ant["origin"]["x"], ant["position"]["y"] + ant["origin"]["y"])
    ant["outOfBounds"] = 
        ptCur["x"] < 0 ||
        ptCur["x"] >= isBlack.len() ||
        ptCur["y"] < 0 ||
        ptCur["y"] >= isBlack[0].len()
    ant["position"]
}

func newAnt(width, height) {
    (
        x: 0,
        y: 0,
        position: (x: 0, y: 0),
        origin: (x: width / 2, y: height / 2),
        outOfBounds: false,
        isBlack: [],
        direction: east
    )
}

func run() {
    const ant = newAnt(100, 100)

    while !ant["outOfBounds"] {
        step(ant)
    }

    var iRow = 0;

    while iRow < 100 {
        var iCol = 0;
        var ln = ""
        while iCol < 100 {
            ln += if getIsBlack(iCol, iRow) {
                " "
            } else {
                "#"
            }
            iCol += 1
        }
        print(ln)
        iRow += 1
    }
}

run()
