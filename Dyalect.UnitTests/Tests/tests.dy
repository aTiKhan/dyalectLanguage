///////////////////////////////////////////////
//Basic tests
///////////////////////////////////////////////
func mathTest1() {
    12 * 3 - 4 + 6
}

func mathTest2() { //1.5919117647058822
    22 % 4 - 3.33 / 8.16
}

func mathTest3() { //6.6129032258064528
    12.3 / (0.64 + 1.22)
}

func logicalTest1() {
    const x = 144
    x / 12 > 100 || x / 6 == 24
}

func logicalTest2() {
    const x = 144
    x / 12 > 100 && x / 6 != 24
}

func comparisonTest1() {
    12 > 11 && 12 <= 12 && 12 != 12.01 && 12 >= 12
}

func comparisonTest2() {
    "string1" != "string2" && "string1" == "string1"
}

///////////////////////////////////////////////
//Complex tests
///////////////////////////////////////////////
func whileTest1() {
    var n = 100
    var x = while n > 0 {
        if n == 33 {
            break n
        }
        n = n - 1
    }
    return x
}

func whileTest2() {
    var n = 100
    var x = while n > 0 {
        if n == 33 {
            break
        }
        n = n - 1
    }
    if !x {
        x = 42
    }
    return x
}

func fizzbuzzTest() {
    var n = 1
    var acc = ""
    while n < 11 {
        if n % 15 == 0 {
            acc = acc + "fizzbuzz"
        } else if n % 3 == 0 {
            acc = acc + "fizz"
        } else if n % 5 == 0 {
            acc = acc + "buzz"
        } else {
            acc = acc + n
        }
        n = n + 1
    }
    acc
}

func recursionTest() {
    var acc = 0
    func iter(n) {
        if n == 0 {
            0
        } else {
            acc = acc + 1;
            iter(n - 1)
        }
    }
    iter(10)
    acc
}

func factTest() {
    func fact(n) {
        if n == 1 {
            1
        }
        else {
            n * fact(n - 1)
        }
    }
    fact(20)
}

func powerTest() {
    func pow(base, exponent) {
        if exponent == 1 {
            base
        }
        else if exponent == 0 {
            1
        }
        else {
            base * pow(base, exponent - 1)
        }
    }
    pow(10, 3)
}

func binaryConversionTest() {
    var acc = ""
    func bin(num) {
        if num != 0 {
            const bin = (num % 2) + 10 * bin(num / 2)
            acc += bin
            0
        }
        else {
            0
        } 
    }
    bin(157)
    acc
}

func fibTest() {
    func fib(n)
    {
        if n == 0 || n == 1 {
            return n
        }
        fib(n - 1) + fib(n - 2)
    }
    fib(11)
}

func phoneParserTest() {
    func digit(c) {
           c == "0"
        || c == "1"
        || c == "2"
        || c == "3"
        || c == "4"
        || c == "5"
        || c == "6"
        || c == "7"
        || c == "8"
        || c == "9"
    }

    func parse(str)
    {
        var max = #str
        var i = 0;
        var res = "";

        while i < max {
            const c = str[i]

            if c == "+" {
                i += 2
                continue
            }
            
            if digit(c) {
                res += c
            }

            i += 1
        }

        res
    }

    parse("+7 (964) 506-11-12")
}

func iteratorTest1() {
    func foo(token) {
        yield 1
        yield 3
        yield 44.2

        if token {
            return
        }

        yield 68.6
    }

    var it = foo(false)
    it() + it() + it() + it()
}

func iteratorTest2() {
    var arr = [1,2,3,4,5,6,7,8]

    func sum(arr) {
        var acc = 0
        for x in arr {
            acc += x
        }
        acc
    }

    sum(arr)
}

func iteratorTest3() {
    var arr = [1,2,3,4,5,6,7,8]

    func filter(arr, pred) {
        for x in arr {
            if pred(x) {
                yield x
            }
        }
    }
    func sum(arr) {
        var acc = 0
        for x in arr {
            acc += x
        }
        acc
    }

    var filtered = filter(arr, x => x % 2 == 0)
    sum(filtered)
}

func iteratorTest4() {
    func reverse(arr) {
        var newArr = []
        newArr.addRange(arr) //hack
        var len = #newArr
        var counter = 1
        for x in arr {
            newArr[len - counter] = x
            counter += 1
        }
        newArr
    }
    func makeString(arr) {
        var str = ""
        for x in arr {
            str += x
        }
        str
    }
    const arr = reverse("Hello")
    makeString(arr)
}