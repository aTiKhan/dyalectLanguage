func tupleLiteralTest1() {
    //Test if a tuple is recognized correctly
    var res = ([1,2,3].len() + 4) * 2
    assert(14, res)
}

func tupleLiteralTest2() {
    var tup = (
        x = (x = 2, y = (y = 3)),
        22
    )
    var res = tup[1] + tup["x"]["x"] - tup["x"]["y"]["y"]
    assert(21, res)
}

func tupleTest1() {
    var t = (1,2,3)
    assert(3, t.len())
}

func tupleTest2() {
    var t = (x = 1, y = 2, z = 3)
    assert(6, t:x + t:y + t:z)
}

func tupleTest3() {
    var t = (x = 1, y = 2, z = 3)
    var res = t.keys().toArray()
    assert(["x", "y", "z"], res)
}

func tupleTest4() {
    var t = (1,2,3,4,5,6)
    var res = t.indices().toArray()
    assert([0, 1, 2, 3, 4, 5], res)
}

func tupleTest5() {
    var t = (42, 4.56)
    var res = t.fst() - t.snd()
    assert(37.44, res)
}

func tupleTest6() {
    var t1 = (12, 3, 44, "string", false, 42.1)
    var t2 = (12, 3, 44, "string", false, 42.1)
    assert(true, t1 == t2)
}

func tupleTest7() {
    var t = Tuple(1, 2, 3, "foo", "bar", 4, 5, 6)
    var t2 = (1, 2, 3, "foo", "bar", 4, 5, 6)
    assert(t2, t)
}

func tupleTest8() { //bug #215
    var t = ("long name" = 12, "+" = 34)
    assert(12, t["long name"])
    assert(34, t["+"])
}

func tupleTest9() { //bug #216
    var t = (fn = x => x+x)
    assert(42, t:fn(21))
}

func tupleTest10() { //bug #217
    var t = (x = 33)
    assert(33, t['x'])
}

func tupleTest11() { //#287
    var xs = (1..10).toTuple()
    var slice = xs.slice(4).toTuple()
    assert((5,6,7,8,9,10), slice)
}

func tupleTest12() { //#287
    var xs = [0,1,2,3,4,5,6,7,8,9]
    var res = xs[1..5].toTuple()
    assert((1,2,3,4), res)
}

func tupleTest13() { //#290
    var xs = (4,6,1,3,2,5)
    var ys = xs.sort((x,y) => x - y)
    assert((1, 2, 3, 4, 5, 6), ys)
}

func tupleTest14() { //#290
    var xs = (7,4,6,1,3,2,5)
    var ys = xs.sort()
    assert((1, 2, 3, 4, 5, 6, 7), ys)
}

func tupleTest15() { //#290
    var xs = (4,6,1,3,2,5)
    var ys = Tuple.sort(xs, (x,y) => x - y)
    assert((1, 2, 3, 4, 5, 6), ys)
}

func tupleTest16() { //#290
    var xs = (7,4,6,1,3,2,5)
    var ys = Tuple.sort(xs)
    assert((1, 2, 3, 4, 5, 6, 7), ys)
}

func tupleTest17() { //#293
    var xx = (1,)
    assert((1,), xx)
    var (x,) = (2,)
    assert(x, 2)
    set (x,) = (3,)
    assert(x, 3)
}

func tupleIndexing() { //#301
    var xs = (1,2,3,4,5)
    assert(5, xs[-1])
    assert(1, xs[-5])
}

//Start #292
func tupleAdd() {
    var xs = (1,)
    xs = xs.add(2)
    xs = xs.add(3)
    assert((1,2,3), xs)
}

func tupleRemove() {
    var xs = (1,2,3,4,5)
    xs = xs.remove(3)
    xs = xs.remove(6)
    xs = xs.remove(5)
    assert((1,2,4), xs)
}

func tupleRemoveAt() {
    var xs = (1,2,3,4)
    xs = xs.removeAt(3)
    assert((1,2,3), xs)
    xs = xs.removeAt(1)
    assert((1,3), xs)
}

func tupleInsert() {
    var xs = (1,2,3)
    xs = xs.insert(0, 0)
    assert((0,1,2,3), xs)
    xs = xs.insert(4, 4)
    assert((0,1,2,3,4), xs)
    xs = xs.insert(3, 2.5)
    assert((0,1,2,2.5,3,4), xs)
}
//End #292