const Nr = [3,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3]
const Nc = [3,0,1,2,3,0,1,2,3,0,1,2,3,0,1,2]

var n  = 0
var _n = 0
var N0 = Array.empty(100, 0)
var N3 = Array.empty(100, 0)
var N4 = Array.empty(100, 0)
var N2 = Array.empty(100, 0)
var fY

func abs(n) {
    if n < 0 {
        -n
    } else {
        n
    }
}

func fI() {
    const g = (11 - N0[n]) * 4
    const a = N2[n] & (15 << g)
    N0[n + 1] = N0[n] + 4
    N2[n + 1] = N2[n] - a + (a << 16)
    N3[n + 1] = 100 /*d*/
    var nt = if Nr[a >> g] <= N0[n] / 4 {
        0
    } else {
        1
    }
    N4[n + 1] = N4[n] + nt
}

func fG() {
    const g = (19 - N0[n]) * 4
    const a = N2[n] & (15 << g)
    N0[n + 1] = N0[n] - 4
    N2[n + 1] = N2[n] - a + (a >> 16)
    N3[n + 1] = 117 /*u*/
    var nt = if Nr[a >> g] >= N0[n] / 4 {
        0
    } else {
        1
    }
    N4[n + 1] = N4[n] + nt
} 

func fE() {
    const g = (14 - N0[n]) * 4
    const a = N2[n] & (15 << g)
    N0[n + 1] = N0[n] + 1
    N2[n + 1] = N2[n] - a + (a << 4)
    N3[n + 1] = 114 /*r*/
    var nt = if Nc[a >> g] <= N0[n] % 4 {
        0
    } else {
        1
    }
    N4[n + 1] = N4[n] + nt
}

func fL(){
    const g = (16 - N0[n]) * 4
    const a = N2[n] & (15 << g)
    N0[n + 1] = N0[n] - 1 
    N2[n + 1] = N2[n] - a + (a >> 4)
    N3[n + 1] = 108 /*l*/
    var nt = if Nc[a >> g] >= N0[n] % 4 {
        0
    } else {
        1
    }
    N4[n + 1] = N4[n] + nt
}

func fN() {
    if N3[n] != 117/*u*/ && N0[n] / 4 < 3 { 
        fI()
        n += 1
        if fY() { 
            return true
        }
        n -= 1
    }
    if N3[n] != 100/*d*/ && N0[n] / 4 > 0 { 
        fG()
        n += 1
        if fY() { 
            return true
        }
        n -= 1
    }
    if N3[n] != 108/*l*/ && N0[n] % 4 < 3 { 
        fE()
        n += 1
        if fY() { 
            return true
        }
        n -= 1
    }
    if N3[n] != 114/*r*/ && N0[n] % 4 > 0 { 
        fL()
        n += 1
        if fY() { 
            return true
        }
        n -= 1
    }
    return false
}

fY = () => {
    if N2[n] == 0x123456789abcdef0 {
        print("Solution found in \(n) moves :", terminator: ""); 
        for g in 1..n {
            print(N3[g], terminator: "")
        }
        print()
        return true;
    }
    if N4[n] <= _n {
        return fN()
    }
    return false
}

N0[0] = 8
N2[0] = 0xfe169b4c0a73d852

while !fY() {
    _n += 1
}