//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dyalect.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CompilerErrors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CompilerErrors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dyalect.Strings.CompilerErrors", typeof(CompilerErrors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &quot;auto&quot; declaration is not allowed in this context..
        /// </summary>
        internal static string AutoNotAllowed {
            get {
                return ResourceManager.GetString("AutoNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &quot;base&quot; is not available in the current context..
        /// </summary>
        internal static string BaseNotAllowed {
            get {
                return ResourceManager.GetString("BaseNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pattern matching in variable binding requires initialization clause..
        /// </summary>
        internal static string BindingPatternNoInit {
            get {
                return ResourceManager.GetString("BindingPatternNoInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty code islands are not supported..
        /// </summary>
        internal static string CodeIslandEmpty {
            get {
                return ResourceManager.GetString("CodeIslandEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid code island inside of a string literal: {0}.
        /// </summary>
        internal static string CodeIslandInvalid {
            get {
                return ResourceManager.GetString("CodeIslandInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to define custom constructors for a type with auto-generated constructors (type &quot;{0}&quot;)..
        /// </summary>
        internal static string CtorAutoGen {
            get {
                return ResourceManager.GetString("CtorAutoGen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor function cannot be an iterator..
        /// </summary>
        internal static string CtorNotIterator {
            get {
                return ResourceManager.GetString("CtorNotIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create a constructor for a non-local type &quot;{0}&quot;..
        /// </summary>
        internal static string CtorOnlyLocalType {
            get {
                return ResourceManager.GetString("CtorOnlyLocalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor names should start with a capital letter..
        /// </summary>
        internal static string CtorOnlyPascal {
            get {
                return ResourceManager.GetString("CtorOnlyPascal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor should be a static function..
        /// </summary>
        internal static string CtorOnlyStatic {
            get {
                return ResourceManager.GetString("CtorOnlyStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression doesn&apos;t have a name..
        /// </summary>
        internal static string ExpressionNoName {
            get {
                return ResourceManager.GetString("ExpressionNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &quot;{0}&quot; is deprecated..
        /// </summary>
        internal static string FunctionDeprecated {
            get {
                return ResourceManager.GetString("FunctionDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default parameter value for &apos;{0}&apos; must be of a primitive type (integer, float, character, string or nil)..
        /// </summary>
        internal static string InvalidDefaultValue {
            get {
                return ResourceManager.GetString("InvalidDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid format for preprocessor directive &quot;{0}&quot;..
        /// </summary>
        internal static string InvalidDirective {
            get {
                return ResourceManager.GetString("InvalidDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Label is not valid in this context..
        /// </summary>
        internal static string InvalidLabel {
            get {
                return ResourceManager.GetString("InvalidLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &quot;throw&quot; statement with no arguments is only valid inside a &quot;catch&quot; block..
        /// </summary>
        internal static string InvalidRethrow {
            get {
                return ResourceManager.GetString("InvalidRethrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slice is invalid (step and exclusivity sign are not supported in slices)..
        /// </summary>
        internal static string InvalidSlice {
            get {
                return ResourceManager.GetString("InvalidSlice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type of a default parameter value..
        /// </summary>
        internal static string InvalidTypeDefaultValue {
            get {
                return ResourceManager.GetString("InvalidTypeDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named argument &quot;{0}&quot; cannot be specified multiple times..
        /// </summary>
        internal static string NamedArgumentMultipleTimes {
            get {
                return ResourceManager.GetString("NamedArgumentMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method cannot be nested in other methods..
        /// </summary>
        internal static string NestedMethod {
            get {
                return ResourceManager.GetString("NestedMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No enclosing loop out of which to break or continue..
        /// </summary>
        internal static string NoEnclosingLoop {
            get {
                return ResourceManager.GetString("NoEnclosingLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexer and member access are only valid with an active &quot;using&quot; declaration..
        /// </summary>
        internal static string NoUsing {
            get {
                return ResourceManager.GetString("NoUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overriding of &quot;{0}&quot; method is not allowed..
        /// </summary>
        internal static string OverrideNotAllowed {
            get {
                return ResourceManager.GetString("OverrideNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pattern &quot;{0}&quot; would never match..
        /// </summary>
        internal static string PatternNeverMatch {
            get {
                return ResourceManager.GetString("PatternNeverMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pattern &quot;{0}&quot; not supported in this context..
        /// </summary>
        internal static string PatternNotSupported {
            get {
                return ResourceManager.GetString("PatternNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A positional argument can&apos;t follow an argument passed by name..
        /// </summary>
        internal static string PositionalArgumentAfterKeyword {
            get {
                return ResourceManager.GetString("PositionalArgumentAfterKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An access to private scope is only allowed inside member functions..
        /// </summary>
        internal static string PrivateAccessInvalid {
            get {
                return ResourceManager.GetString("PrivateAccessInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods cannot be declared inside a &quot;private&quot; scope..
        /// </summary>
        internal static string PrivateMethod {
            get {
                return ResourceManager.GetString("PrivateMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access a private module member &quot;{0}&quot;..
        /// </summary>
        internal static string PrivateNameAccess {
            get {
                return ResourceManager.GetString("PrivateNameAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nested private blocks are not allowed..
        /// </summary>
        internal static string PrivateScopeNested {
            get {
                return ResourceManager.GetString("PrivateScopeNested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private blocks can be declared only in global scope..
        /// </summary>
        internal static string PrivateScopeOnlyGlobal {
            get {
                return ResourceManager.GetString("PrivateScopeOnlyGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statement &quot;return&quot; is not supported inside constructors..
        /// </summary>
        internal static string ReturnInConstructor {
            get {
                return ResourceManager.GetString("ReturnInConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statement &quot;return&quot; is not allowed in iterators. Use &quot;yield break&quot; to terminate an iterator..
        /// </summary>
        internal static string ReturnInIterator {
            get {
                return ResourceManager.GetString("ReturnInIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statement &quot;return&quot; is only supported inside functions..
        /// </summary>
        internal static string ReturnNotAllowed {
            get {
                return ResourceManager.GetString("ReturnNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slicing is not supported in this context..
        /// </summary>
        internal static string SliceNotSupported {
            get {
                return ResourceManager.GetString("SliceNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &quot;{0}&quot; cannot be declared as static. Only methods can be static..
        /// </summary>
        internal static string StaticOnlyMethods {
            get {
                return ResourceManager.GetString("StaticOnlyMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many errors (error limit exceeded)..
        /// </summary>
        internal static string TooManyErrors {
            get {
                return ResourceManager.GetString("TooManyErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module already contains a definition for &quot;{0}&quot;..
        /// </summary>
        internal static string TypeAlreadyDeclared {
            get {
                return ResourceManager.GetString("TypeAlreadyDeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name should start from a capital letter..
        /// </summary>
        internal static string TypeNameCamel {
            get {
                return ResourceManager.GetString("TypeNameCamel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to change a value of a constant &quot;{0}&quot;..
        /// </summary>
        internal static string UnableAssignConstant {
            get {
                return ResourceManager.GetString("UnableAssignConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to assign a value to an expression: {0}..
        /// </summary>
        internal static string UnableAssignExpression {
            get {
                return ResourceManager.GetString("UnableAssignExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to link module &apos;{0}&quot;. Compilation terminated..
        /// </summary>
        internal static string UnableToLinkModule {
            get {
                return ResourceManager.GetString("UnableToLinkModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &quot;{0}&quot; is not declared in a parent scope..
        /// </summary>
        internal static string UndefinedBaseVariable {
            get {
                return ResourceManager.GetString("UndefinedBaseVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown module &quot;{0}&quot;..
        /// </summary>
        internal static string UndefinedModule {
            get {
                return ResourceManager.GetString("UndefinedModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown type &quot;{0}&quot;..
        /// </summary>
        internal static string UndefinedType {
            get {
                return ResourceManager.GetString("UndefinedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &quot;{0}&quot; is not declared..
        /// </summary>
        internal static string UndefinedVariable {
            get {
                return ResourceManager.GetString("UndefinedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown preprocessor directive &quot;{0}&quot;..
        /// </summary>
        internal static string UnknownDirective {
            get {
                return ResourceManager.GetString("UnknownDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match entry &quot;{0}&quot; is unreachable. The preceding entry &quot;{1}&quot; would match first..
        /// </summary>
        internal static string UnreachableMatchEntry {
            get {
                return ResourceManager.GetString("UnreachableMatchEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        internal static string UserWarning {
            get {
                return ResourceManager.GetString("UserWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default values are not allowed for the argument lists..
        /// </summary>
        internal static string VarArgNoDefaultValue {
            get {
                return ResourceManager.GetString("VarArgNoDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one parameter of type argument list is allowed..
        /// </summary>
        internal static string VarArgOnlyOne {
            get {
                return ResourceManager.GetString("VarArgOnlyOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &quot;{0}&quot; is already declared..
        /// </summary>
        internal static string VariableAlreadyDeclared {
            get {
                return ResourceManager.GetString("VariableAlreadyDeclared", resourceCulture);
            }
        }
    }
}
